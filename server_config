#!/bin/bash
##################################################################
## Server
## 安装这些 server 时,要注意版本,按tab可以查看软件源支持的最高版
##################################################################
sudo sysv-rc-conf
# 将下面安装的服务取消 开机自动启动

##################################################################
## 1. mysql
##################################################################
sudo apt-get install mysql-server mysql-client php5-mysql
# 1.1 MariaDB #　这是安装的最新版的，也可以只运行最下面一句话 
sudo apt-get install software-properties-common
sudo apt-key adv –recv-keys –keyserver hkp://keyserver.ubuntu.com:80 0xcbcb082a1bb943db
sudo add-apt-repository ‘deb http://sfo1.mirrors.digitalocean.com/mariadb/repo/10.0/ubuntu trusty main’
sudo apt-get update
sudo apt-get install mariadb-server
# 1.2 配置
# /etc/mysql/mysql.conf.d/mysqld.cnf # 配置文件地址
# bind-address = 127.0.0.1 //找到此内容并且注释,就可以通过远程访问了
mysql -u root -p # 用 root 用户登陆
sudo mysqladmin -u root password newpassword # 修改管理员密码
sudo /etc/init.d/mysql stop # start restart
sudo service mysql stop
# 1.3 取消开机启动
sudo update-rc.d -f mysql remove  # 这个可以实现, 读取的就是 /etc/init.d/
# 有四个选项 defaults remove start stop  # default 开机启动
# 下面这种方法... 现在已经不行了
# sudo cp /etc/init.d/mysql /etc/init.d/mysql.bak
# sudo vim /etc/init.d/mysql
# 查找 start, 将 su - mysql -s /bin/sh ... 那行注释掉

##################################################################
## 2. Nginx
##################################################################
sudo apt-get insatll nginx
sudo update-rc.d -f nginx remove

##################################################################
## 3. vsftpd  very secure FTP daemon
##################################################################
rpm -qa | grep vsftpd # 先检查是否已经安装了 vsftpd

# 3.1 如果没有，就安装，并设置开机启动
yum -y install vsftpd
chkconfig vsftpd on  # 设置开机启动
service vsftpd start  # 启动vsftpd
groupadd ftp  # 添加用户组
useradd -g ftp -M -d /srv/ftp/coder352 -s /sbin/nologin coder352
passwd coder352  # 为用户设置密码,暂时用 asdasd 吧,毕竟是 test
# -g接的是用户组; 
# -M表示不设置它的主目录，假设如果没有-M，则在/home下会有跟用户名(zhujin)一样的目录。
# -d后面接的是用zhujin登陆FTP的时候，它的初始目录。
# -s 后面接/sbin/nologin表示用户不需要登录系统，因为我们只需要用来登陆FTP
# coder352表示用户名了
mkdir -p /srv/ftp/coder352
chown -R coder352:ftp /srv/ftp/coder352  # 更改FTP目录的权限
/etc/init.d/vsftpd restart  # 重启 vsftpd

# 3.1.2 把用户限制在固定的目录
# 如果这时候登陆会发现刚才新建的用户可以访问并读取所有的目录的数据，这并不是我们想要的，需要把他们限定在某个目录下
vim /etc/vsftpd/vsftpd.conf
# 这里可以直接运行 ./ftp_config
```
chroot_list_enable=YES
chroot_list_file=/etc/vsftpd/chroot_list
# Fixing 500 OOPS: vsftpd: refusing to run with writable root inside chroot ()
allow_writeable_chroot=YES  # change users root directory is writable 
```
# 然后在文件
vim /etc/vsftpd/chroot_list  # 里面填入你想要限制的用户，
# 比如我就填入了 coder352 ，这时候重启vsftp，然后重新登陆就可以了。
# 上面是基本配置,就可以直接使用了,下面的是一些虚拟用户的配置
# 测试
telnet localhost 21
netstat -tulpn | grep :21
# 可能要配置一下 iptables 
# 在自己电脑上
ftp xx.xx.xx.xx  # 就可以实现登陆 ftp 服务器了
# 一些常见的其它错误, 见 ./ftp_config

# 3.2 基于虚拟用户的配置
# 3.2.1 修改配置文件
# 所谓虚拟用户就是没有使用真实的帐户，只是通过映射到真实帐户和设置权限的目的。虚拟用户不能登录CentOS系统。
sudo vim /etc/vsftpd/vsftpd.conf  # 进行配置
# 或者也可以执行 ./vsftpd.config

:||{
anonymous_enable=NO  # 设定不允许匿名访问
local_enable=YES  # 设定本地用户可以访问。注：如使用虚拟宿主用户，在该项目设定为NO的情况下所有虚拟用户将无法访问
chroot_list_enable=YES  # 使用户不能离开主目录
ascii_upload_enable=YES
ascii_download_enable=YES  # 设定支持ASCII模式的上传和下载功能
pam_service_name=vsftpd  # PAM认证文件名。PAM将根据/etc/pam.d/vsftpd进行认证
# 以下这些是关于vsftpd虚拟用户支持的重要配置项，默认vsftpd.conf中不包含这些设定项目，需要自己手动添加
guest_enable=YES  # 设定启用虚拟用户功能
guest_username=ftp # 指定虚拟用户的宿主用户，CentOS中已经有内置的ftp用户了
user_config_dir=/etc/vsftpd/vuser_conf  # 设定虚拟用户个人vsftp的CentOS FTP服务文件存放路径。存放虚拟用户个性的CentOS FTP服务文件(配置文件名=虚拟用户名
}

# 3.2.2 进行认证
# 首先，安装Berkeley DB工具，很多人找不到db_load的问题就是没有安装这个包。
yum install db4 db4-utils
# 然后，创建用户密码文本
vim /etc/vsftpd/vuser_passwd.txt # 注意奇行是用户名，偶行是密码
```
test
123456
```
# 接着，生成虚拟用户认证的db文件
db_load -T -t hash -f /etc/vsftpd/vuser_passwd.txt /etc/vsftpd/vuser_passwd.db
# 随后，编辑认证文件
vim /etc/pam.d/vsftpd  # 全部注释掉原来语句，再增加以下两句, vuser_passwd 不用修改
```
auth required pam_userdb.so db=/etc/vsftpd/vuser_passwd
account required pam_userdb.so db=/etc/vsftpd/vuser_passwd
```
# 最后，创建虚拟用户配置文件
mkdir /etc/vsftpd/vuser_conf/
vi /etc/vsftpd/vuser_conf/test  # 文件名等于vuser_passwd.txt里面的账户名，否则下面设置无效
# 内容如下
```
local_root=/ftp/www  //虚拟用户根目录,根据实际情况修改
write_enable=YES  //可写
anon_umask=022 //掩码
anon_world_readable_only=NO 
anon_upload_enable=YES 
anon_mkdir_write_enable=YES
anon_other_write_enable=YES
```
# 3.2.3 设置Selinux
setsebool -P ftp_home_dir=1  # 设置ftp可以使用home目录
setsebool -P allow_ftpd_full_access=1  # 设置ftp用户可以有所有权限
# 3.2.4 设置FTP根目录权限
mkdir /ftp/www  # 创建目录
chmod -R 755 /ftp
chmod -R 777 /ftp/www
# 最新的vsftpd要求对主目录不能有写的权限所以ftp为755，主目录下面的子目录再设置777权限
# 3.2.5 设置防火墙  # 这个没找到啊
vim /etc/sysconfig/iptables
# 在“-A INPUT –m state --state NEW –m tcp –p –dport 22 –j ACCEPT”，下添加：
```
-A INPUT -m state --state NEW -m tcp -p -dport 21 -j ACCEPT
```
# 然后保存，并关闭该文件，在终端内运行下面的命令，刷新防火墙配置：
service iptables restart
# 3.3 配置PASV模式
# vsftpd默认没有开启PASV模式，现在FTP只能通过PORT模式连接，要开启PASV默认需要通过下面的配置
vim /etc/vsftpd/vsftpd.conf  # 在末尾添加
```
pasv_enable=YES   //开启PASV模式
pasv_min_port=40000   //最小端口号
pasv_max_port=40080   //最大端口号
pasv_promiscuous=YES
```
# 在防火墙配置内开启40000到40080端口
```
-A INPUT -m state --state NEW -m tcp -p -dport 40000:40080 -j ACCEPT
```
# 重启iptabls和vsftpd
service iptables restart
service vsftpd restart
# 现在可以使用PASV模式连接你的FTP服务器了~
# 3.4 附加
# CentOS 7中默认使用Firewalld做防火墙，所以修改iptables后，在重启系统后，根本不管用。
# Firewalld中添加端口方法如下：
firewall-cmd --zone=public --add-port=3306/tcp --permanent
firewall-cmd --reload

##################################################################
## tomcat
##################################################################
sudo apt-get install tomcat # 还要按 tab 查看最新版本, 例如 tomcat8, 它将创建一个 tomcat8 用户，并以默认设置启动 Tomcat 
# URL: localhost: 8080 
sudo apt-get install tomcat8-docs tomcat8-admin tomcat8-examples # 安装 Tomcat 的在线文档， Web接 口（管理 Web 应用），以及一些示例应用
# sudo vim /etc/tomcat8/tomcat-users.xml # 必须用 sudo 权限打开，否则什么都看不到 # 在　<tomcat-users> 标签下添加管理员权限
# <user username="admin" password="password" roles="manager-gui,admin-gui" />
sudo service tomcat8 restart
# 主目录: /var/lib/tomcat8/webapps/ROOT/index.html
